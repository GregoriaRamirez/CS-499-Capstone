# 🛠️ Software Design & Engineering Artifact

## 📌 Artifact Description

For my CS 499 Capstone, I chose to enhance my final project from CS 340: Client-Server Development. Originally created in February 2025, the artifact is a web-based dashboard for an animal shelter...

[Keep all the same content exactly as in your `gregoriaramirez.github.io` version from here down — including image, code snippets, outcomes, reflections, etc.]

## 📷 Final Dashboard Screenshot

![Animal Shelter Dashboard Screenshot](./assets/Animal_Shelter_Dashboard.png)


## 📁 Project Folder Structure (After Enhancement)

```plaintext
CS499Capstone/
├── app.py                     # Launches the Dash application
├── controller.py              # Handles Dash callbacks and routing logic
├── .env                       # MongoDB credentials (secured)
├── requirements.txt           # Dependency list for virtual environment
├── README.md                  # Project documentation
├── .gitignore                 # Excludes venv and .env from Git
│
├── model/
│   ├── __init__.py            # Initializes the model module
│   ├── model.py               # MongoDB access and CRUD logic
│   └── view.py                # Layout and view logic for Dash app
│
├── assets/
│   ├── Dashboard.png
│   ├── DashChartGeo.png
│   ├── Grazioso Salvare Logo.png
│   └── SelectBreed.png
│
├── original_code/             # Backup of the original unenhanced project
└── venv/                      # Virtual environment for isolating dependencies
```

---

## 🧠 Reflection on Software Engineering Skills

This enhancement demonstrates my ability to:

* Apply modular design for scalability and reusability
* Follow secure coding practices
* Refactor academic code into maintainable, professional-grade applications
* Use tools like VS Code and `.env` to build software suitable for real-world deployment
* Implement the MVC pattern by separating layout, callbacks, and data logic into distinct modules
* Introduce efficient filter logic using vectorized operations in pandas
* Add user-friendly features like breed and color filtering
* Create a virtual environment using `venv` to manage dependencies cleanly
* Transition from static data files to secure, real-time database queries using MongoDB Compass
* Handle database errors gracefully and ensure connections are opened and closed properly

---

## 🎓 Course Outcomes Met

* **Outcome 3 (Software Design and Engineering):** Achieved by implementing modularity, using environment variables, and improving code structure and maintainability.

---

## 🔗 Project Links

* 📁 [Original Code on GitHub](https://github.com/GregoriaRamirez/CS-499-Capstone/tree/main/original_code)
* 📁 [Enhanced Code (GitHub Pages)](https://gregoriaramirez.github.io/artifact-software)
* 🖼️ [Screenshot: Animal Shelter Dashboard](/assets/Animal_Shelter_Dashboard.png)
* 📷 [Video Walkthrough](https://www.youtube.com/embed/NTrtEVuawBM)
